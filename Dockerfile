# syntax=docker/dockerfile:1.3-labs

ARG BUILD_BASE_VERSION=nightly-2021-11-09-alpine3.14
FROM ghcr.io/digicatapult/substrate-docker-build-base:$BUILD_BASE_VERSION as build

COPY . .

# local sccache config args
ARG BUILD_CONFIG_SCCACHE_LOCAL=1
ARG BUILD_CONFIG_SCCACHE_CACHE_SIZE=10G

# S3 sccache config args
ARG BUILD_CONFIG_SCCACHE_BUCKET
ARG BUILD_CONFIG_AWS_ACCESS_KEY_ID
ARG BUILD_CONFIG_AWS_SECRET_ACCESS_KEY
ARG BUILD_CONFIG_AWS_IAM_CREDENTIALS_URL
ARG BUILD_CONFIG_SCCACHE_ENDPOINT
ARG BUILD_CONFIG_SCCACHE_S3_USE_SSL
ARG BUILD_CONFIG_SCCACHE_S3_KEY_PREFIX

# Redis sccache config args
ARG BUILD_CONFIG_SCCACHE_REDIS

# Memcached sccache config args
ARG BUILD_CONFIG_SCCACHE_MEMCACHED

# Google Cloud Storage sccache args
ARG BUILD_CONFIG_SCCACHE_GCS_BUCKET
ARG BUILD_CONFIG_SCCACHE_GCS_KEY_PATH
ARG BUILD_CONFIG_SCCACHE_GCS_CREDENTIALS_URL
ARG BUILD_CONFIG_SCCACHE_GCS_RW_MODE

# Azure blob storage scccache args
ARG BUILD_CONFIG_SCCACHE_AZURE_CONNECTION_STRING
ARG BUILD_CONFIG_SCCACHE_AZURE_BLOB_CONTAINER

# setup build envs
COPY <<EOF /build/build-envs
export PROTOC=$(which protoc)
export PROTOC_INCLUDE=/usr/include
export RUSTFLAGS=-Ctarget-feature=-crt-static
export RUSTC_WRAPPER=/sccache
export SCCACHE_DIR=$([[ -z "$BUILD_CONFIG_SCCACHE_LOCAL" ]] || echo "/cache")
export SCCACHE_CACHE_SIZE=$BUILD_CONFIG_SCCACHE_CACHE_SIZE
export SCCACHE_BUCKET=$BUILD_CONFIG_SCCACHE_BUCKET
export AWS_ACCESS_KEY_ID=$BUILD_CONFIG_AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY=$BUILD_CONFIG_AWS_SECRET_ACCESS_KEY
export AWS_IAM_CREDENTIALS_URL=$BUILD_CONFIG_AWS_IAM_CREDENTIALS_URL
export SCCACHE_ENDPOINT=$BUILD_CONFIG_SCCACHE_ENDPOINT
export SCCACHE_S3_USE_SSL=$BUILD_CONFIG_SCCACHE_S3_USE_SSL
export SCCACHE_S3_KEY_PREFIX=$BUILD_CONFIG_SCCACHE_S3_KEY_PREFIX
export SCCACHE_REDIS=$BUILD_CONFIG_SCCACHE_REDIS
export SCCACHE_MEMCACHED=$BUILD_CONFIG_SCCACHE_MEMCACHED
export SCCACHE_GCS_BUCKET=$BUILD_CONFIG_SCCACHE_GCS_BUCKET
export SCCACHE_GCS_KEY_PATH=$BUILD_CONFIG_SCCACHE_GCS_KEY_PATH
export SCCACHE_GCS_CREDENTIALS_URL=$BUILD_CONFIG_SCCACHE_GCS_CREDENTIALS_URL
export SCCACHE_GCS_RW_MODE=$BUILD_CONFIG_SCCACHE_GCS_RW_MODE
export SCCACHE_AZURE_CONNECTION_STRING=$BUILD_CONFIG_SCCACHE_AZURE_CONNECTION_STRING
export SCCACHE_AZURE_BLOB_CONTAINER=$BUILD_CONFIG_SCCACHE_AZURE_BLOB_CONTAINER
export SCCACHE_IDLE_TIMEOUT=0
EOF

RUN <<EOF
set -ex
source /build/build-envs
cargo build --release
cp /build/target/release/vitalam-node /vitalam-node
rm -rf /build/target
EOF

# build the runtime image that will actually contain the final built executable

FROM alpine:3.12 AS runtime

RUN apk update
RUN apk add libgcc libstdc++

RUN mkdir /vitalam-node /data
COPY --from=build /vitalam-node /vitalam-node

WORKDIR /vitalam-node

CMD /vitalam-node/vitalam-node

EXPOSE 30333 9933 9944
